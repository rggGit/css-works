mixin article(params, link)
    each item, key in params
        article.related-article.flexy__item.flexy--column
            header.related-article__header
                h3.related-article__heading #{item.title}
                p.related-article__description #{item.description}
            .code-switcher.flexy__item.flexy--column.flexy__child
                input.show-control(type='checkbox' name='code-switcher--#{link}--#{key}' id='code-switcher--#{link}--#{key}')
                .show-control__content.flexy__item.flexy__child
                    .code-switcher__item.flexy__item
                        .code-switcher__item__content.flexy__child
                            .regular-padding
                                each elem in item.example.text
                                    p #{elem}
                        .code-switcher__item__content.flexy__child.flexy__item
                            iframe.code-switcher__item__content__object.flexy__child(name='foo' type='text/html' src='' width='100%' hright='100%')
                            //- iframe.flexy__child(src='#{item.example.work}' width='100%')
                .code-switcher__actions.flexy__item.flexy--between
                    if item.example.support
                        .code-switcher__button.regular-padding
                            - var iconClass
                            each val, key in item.example.support

                                - iconClass = ''
                                if val === true
                                    - iconClass = 'svg-icon--ok'
                                else
                                    - iconClass = 'svg-icon--ko'

                                svg(class='svg-icon #{iconClass}')
                                    use(xmlns:xlink='http://www.w3.org/1999/xlink' xlink:href='##{key}')
                    label.code-switcher__button.regular-padding(for='code-switcher--#{link}--#{key}' aria-label='Render exercise')
                        svg.svg-icon.svg-icon--ok
                            use(xmlns:xlink='http://www.w3.org/1999/xlink' xlink:href='#eye')
                        span.toggle(aria-label='Toogle result')